name: Publish GitHub Release as newest

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 1-5'

jobs:
  publish-release:
    name: Publish GitHub Release
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      actions: read

    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Get latest pre-release name
        id: get_latest_prerelease
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          latest_release=$(gh release list --json name,tagName,isDraft,isPrerelease -L 1)
          is_latest_prerelease=$(jq -r '.[0].isPrerelease' <<< $latest_release)
          echo "is_latest_prerelease=$is_latest_prerelease" >> $GITHUB_OUTPUT

          if [ "$is_latest_prerelease" != "true" ]; then
              echo "No pre-release found"
              exit 0
          fi

          latest_prerelease_version=$(jq -r '.[0].tagName' <<< $latest_release)
          echo "latest_prerelease_version=$latest_prerelease_version" >> $GITHUB_OUTPUT

      - name: Log in to Azure
        if: steps.get_latest_prerelease.outputs.is_latest_prerelease == 'true'
        uses: Azure/login@cb79c773a3cfa27f31f25eb3f677781210c9ce3d # v1.6.1
        with:
          creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}

      - name: Download Play Store credentials
        if: steps.get_latest_prerelease.outputs.is_latest_prerelease == 'true'
        env:
          ACCOUNT_NAME: bitwardenci
          CONTAINER_NAME: mobile
        run: |
          mkdir -p ${{ github.workspace }}/secrets

          az storage blob download --account-name $ACCOUNT_NAME --container-name $CONTAINER_NAME \
          --name authenticator_play_store-creds.json --file ${{ github.workspace }}/secrets/authenticator_play_store-creds.json --output none

      - name: Check released version
        if: steps.get_latest_prerelease.outputs.is_latest_prerelease == 'true'
        id: appstore_version
        run: |
          appstore_version=$(bundle exec fastlane run getLatestVersion \
            serviceCredentialFile:${{ github.workspace }}/secrets/authenticator_play_store-creds.json }})

          echo "Latest version on Google Play Store: $appstore_version"
          echo "appstore_version=$appstore_version" >> $GITHUB_OUTPUT

      - name: Check if version is already released
        if: steps.get_latest_prerelease.outputs.is_latest_prerelease == 'true'
        id: check_version
        env:
          LATEST_PRERELEASE_VERSION: ${{ steps.get_latest_prerelease.outputs.latest_prerelease_version }}
          APPSTORE_VERSION: ${{ steps.appstore_version.outputs.appstore_version }}
        run: |
          if [ "$LATEST_PRERELEASE_VERSION" == "$APPSTORE_VERSION" ]; then
              echo "Version $LATEST_PRERELEASE_VERSION is already released on Google Play Store"
              echo "version_released=true" >> $GITHUB_OUTPUT
          else
              echo "Version $LATEST_PRERELEASE_VERSION is not released on Google Play Store"
              echo "version_released=false" >> $GITHUB_OUTPUT
          fi

      - name: Make GitHub release latest and non-pre-release
        if: steps.check_version.outputs.version_released == 'true'
        env:
          TAG: ${{ steps.get_latest_prerelease.outputs.latest_prerelease_version }}
          GH_TOKEN: ${{ github.token }}
        run: gh release edit $TAG --prerelease=false --latest --draft=false
